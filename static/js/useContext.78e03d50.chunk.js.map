{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/UseContext/index.tsx"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","initState","color","reducer","state","action","type","ColorContext","createContext","Show","props","useContext","dispatch","style","onClick","Example","useReducer","Provider"],"mappings":"mHAAe,SAASA,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,ECHM,SAASE,EAAeN,EAAKG,GAC1C,OCLa,SAAyBH,GACtC,GAAIK,MAAME,QAAQP,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKG,GACjD,GAAsB,qBAAXK,QAA4BA,OAAOC,YAAYC,OAAOV,GAAjE,CACA,IAAIW,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKjB,EAAIQ,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETlB,GAAKQ,EAAKT,SAAWC,GAH8CS,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBX,EAAKG,IGJ3C,SAAqCoB,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,EAAiBA,EAAGC,GACtD,IAAIC,EAAIf,OAAOgB,UAAUC,SAASC,KAAKL,GAAGM,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBF,EAAEO,cAAaL,EAAIF,EAAEO,YAAYC,MAC7C,QAANN,GAAqB,QAANA,EAAoBpB,MAAM2B,KAAKP,GACxC,cAANA,GAAqB,2CAA2CQ,KAAKR,GAAW,EAAiBF,EAAGC,QAAxG,GHF8D,CAA2BxB,EAAKG,IILjF,WACb,MAAM,IAAI+B,UAAU,6IJIgF,G,sGKFhGC,EAAY,CAAEC,MAAO,SAgBrBC,EAAU,SAACC,EAAkBC,GACjC,OAAQA,EAAOC,MACb,IAnBiB,eAoBf,MAAO,CAAEJ,MAAOG,EAAOH,OACzB,QACE,OAAOE,IAIPG,EAAeC,wBAAmC,CAAEJ,MAAOH,IAE3DQ,EAAiB,SAAAC,GAAU,IAAD,EACFC,qBAAWJ,GAA/BH,EADsB,EACtBA,MAAOQ,EADe,EACfA,SAEf,OACE,yBAAKC,MAAO,CAAEX,MAAOE,EAAMF,QAA3B,+CACYE,EAAMF,MAChB,4BAAQY,QAAS,kBAAMF,GAAYA,EAAS,CAAEN,KAlC/B,eAkCmDJ,MAAO,UAAzE,gBACA,4BAAQY,QAAS,kBAAMF,GAAYA,EAAS,CAAEN,KAnC/B,eAmCmDJ,MAAO,YAAzE,kBAoBSa,UAfW,SAAAL,GAAU,IAAD,EACPM,qBAAWb,EAASF,GADb,mBAC1BG,EAD0B,KACnBQ,EADmB,KAGjC,OACE,kBAACL,EAAaU,SAAd,CAAuB9B,MAAO,CAAEiB,QAAOQ,aACrC,6BACE,kBAACH,EAAD,MAEA,4BAAQK,QAAS,kBAAMF,GAAYA,EAAS,CAAEN,KAhDjC,eAgDqDJ,MAAO,WAAzE,gBACA,4BAAQY,QAAS,kBAAMF,GAAYA,EAAS,CAAEN,KAjDjC,eAiDqDJ,MAAO,gBAAzE","file":"static/js/useContext.78e03d50.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { createContext, useReducer, useContext } from 'react'\n\nconst UPDATE_COLOR = 'UPDATE_COLOR'\nconst initState = { color: 'black' }\n\ntype StateType = {\n  color: string\n}\n\ntype ActionType = {\n  type: string,\n  color: string\n}\n\ntype MixStateAndDispatch = {\n  state: StateType,\n  dispatch?: React.Dispatch<ActionType>\n}\n\nconst reducer = (state: StateType, action: ActionType): StateType => {\n  switch (action.type) {\n    case UPDATE_COLOR:\n      return { color: action.color }\n    default:\n      return state\n  }\n}\n\nconst ColorContext = createContext<MixStateAndDispatch>({ state: initState })\n\nconst Show: React.FC = props => {\n  const { state, dispatch } = useContext(ColorContext)\n\n  return (\n    <div style={{ color: state.color }}>\n      当前字体颜色为: {state.color}\n      <button onClick={() => dispatch && dispatch({ type: UPDATE_COLOR, color: 'red' })}>红色</button>\n      <button onClick={() => dispatch && dispatch({ type: UPDATE_COLOR, color: 'green' })}>绿色</button>\n    </div>\n  )\n}\n\nconst Example: React.FC = props => {\n  const [state, dispatch] = useReducer(reducer, initState)\n\n  return (\n    <ColorContext.Provider value={{ state, dispatch }}>\n      <div>\n        <Show />\n\n        <button onClick={() => dispatch && dispatch({ type: UPDATE_COLOR, color: 'blue' })}>蓝色</button>\n        <button onClick={() => dispatch && dispatch({ type: UPDATE_COLOR, color: 'lightblue' })}>轻绿色</button>\n      </div>\n    </ColorContext.Provider>\n  )\n}\n\nexport default Example\n"],"sourceRoot":""}