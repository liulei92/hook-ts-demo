{"version":3,"sources":["assets/arrGeneric.png","views/TsDemo/index.tsx"],"names":["module","exports","Direction","ease","direction","left","console","log","p1","name","age","this","getAge","getName","bsae","sex","chest","waist","hip","bodyFat","height","TsDemo","loaction","useLocation","src","arrGeneric","alt"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,wC,2CCKtCC,E,kEAAAA,O,WAAAA,I,eAAAA,I,eAAAA,I,kBAAAA,M,KAUL,IAAgBC,EAAgBC,EAAhBD,EAIT,OAJyBC,EAIjBF,EAAUG,KAHvBC,QAAQC,IAAIJ,EAAMC,G,IA8BdI,EAAK,I,WApBT,cAA+C,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,IAAyB,yBAJtCD,UAIsC,OAFtCC,SAEsC,EAC5CC,KAAKF,KAAOA,EACZE,KAAKD,IAAMA,E,sDAOX,OAAOC,KAAKF,O,+BAOZ,OAAOE,KAAKD,Q,KAIL,CAAW,CAAED,KAAM,OAAQC,IAAK,KAC3CJ,QAAQC,IAAIC,EAAGI,UACfN,QAAQC,IAAIC,EAAGK,WAuCfP,QAAQC,IAlB8B,CACpCO,KAAM,CACJL,KAAM,OACNC,IAAK,IAEPK,IAAK,SACLC,MAAO,GACPC,MAAO,GACPC,IAAK,IAGgB,CACrBT,KAAM,OACNC,IAAK,GACLS,QAAS,MACTC,OAAQ,MAqDKC,UAhDU,WACvB,IAAMC,EAAWC,cAGjB,OAFAjB,QAAQC,IAAIe,GAGV,6BACE,yBAAKE,IAAKC,IAAYC,IAAI,eAC1B","file":"static/js/tsDemo.1f32ad7a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrGeneric.9b07ff67.png\";","import React from 'react'\nimport { useLocation } from 'react-router-dom'\nimport arrGeneric from '@/assets/arrGeneric.png'\n\n/* 枚举 */\nenum Direction {\n  up = 1,\n  down,\n  left,\n  right\n}\n\n/* 三种运动方式 */\ntype MoveType = 'linear' | 'ease' | 'bounse'\n\nconst moveTo = (ease: MoveType, direction: Direction): void => {\n  console.log(ease, direction)\n}\n\nmoveTo('ease', Direction.left)\n\nclass Person {\n  private name: string\n\n  private age: number\n\n  constructor ({ name, age }: drag.PersonProps) {\n    this.name = name\n    this.age = age\n  }\n\n  /**\n   * getName\n   */\n  public getName (): string {\n    return this.name\n  }\n\n  /**\n   * getAge\n   */\n  public getAge (): number {\n    return this.age\n  }\n}\n\nconst p1 = new Person({ name: 'alex', age: 20 })\nconsole.log(p1.getAge())\nconsole.log(p1.getName())\n\ninterface PersonProps {\n  name: string,\n  age: number\n}\n\n// 泛型\ntype WomanProps<T> = {\n  sex?: 'male' | 'female'\n  chest?: number,\n  waist?: number,\n  hip?: number,\n  bsae: T\n}\n\ninterface ManProps extends PersonProps {\n  bodyFat?: string,\n  height?: number\n}\n\nconst lili: WomanProps<PersonProps> = {\n  bsae: {\n    name: 'lili',\n    age: 20\n  },\n  sex: 'female',\n  chest: 93,\n  waist: 69,\n  hip: 85\n}\n\nconst kang: ManProps = {\n  name: 'kang',\n  age: 22,\n  bodyFat: '18%',\n  height: 178\n}\n\nconsole.log(lili, kang)\n\nconst TsDemo: React.FC = () => {\n  const loaction = useLocation()\n  console.log(loaction)\n\n  return (\n    <div>\n      <img src={arrGeneric} alt='arrGeneric' />\n      <pre>\n        {\n          `\n          interface Array<T> {\n            length: number,\n            toString(): string,\n            pop(): T | undefined,\n            // 注意此处的含义\n            push(...items: T[]): number,\n            concat(...items: T[]): T[],\n            join(separator?: string): string,\n            reverse(): T[],\n            shift(): T | undefined;\n            slice(start?: number, end?: number): T[],\n            sort(compareFn?: (a: T, b: T) => number): this,\n            splice(start: number, deleteCount?: number): T[],\n            // 注意此处的重载写法\n            splice(start: number, deleteCount: number, ...items: T[]): T[],\n            unshift(...items: T[]): number,\n            indexOf(searchElement: T, fromIndex?: number): number,\n            lastIndexOf(searchElement: T, fromIndex?: number): number,\n            every(callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any): boolean,\n            some(callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any): boolean,\n            forEach(callbackfn: (value: T, index: number, array: T[]) => void, thisArg?: any): void,\n            map<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): U[],\n            filter<S extends T>(callbackfn: (value: T, index: number, array: T[]) => value is S, thisArg?: any): S[],\n            filter(callbackfn: (value: T, index: number, array: T[]) => any, thisArg?: any): T[],\n            reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T,\n            reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T,\n            reduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U,\n            // reduceRight 略\n            // 索引调用\n            [n: number]: T,\n          }\n          `\n        }\n      </pre>\n    </div>\n  )\n}\n\nexport default TsDemo\n"],"sourceRoot":""}