{"version":3,"sources":["store/store.base.ts","store/index.ts","router/Routes.ts","router/Menus.tsx","components/RouteWithSubRoutes.tsx","App.tsx","index.tsx"],"names":["baseStore","action","bound","v","this","globalCount","observable","autorun","document","title","stores","routes","name","path","component","lazy","Menus","props","Routes","map","route","i","key","to","RouteWithSubRoutes","index","render","App","useEffect","console","log","store","className","fallback","exact","from","ReactDOM","StrictMode","getElementById"],"mappings":"6SAYMA,EAAY,I,EALfC,IAAOC,M,iLAAsBC,GAC5BC,KAAKC,YAAcF,M,wCALpBG,K,wEAAmB,mB,yCAEnBA,K,yEAAyB,K,2HAS5BC,aAAQ,WACNC,SAASC,MAAQT,EAAUS,SAGdT,ICZAU,EAJO,CACpBV,UDeaA,GEOAW,EAvBA,CACb,CACEC,KAAM,OACNC,KAAM,QACNC,UAAWC,gBAAK,kBAAM,iCAExB,CACEH,KAAM,QACNC,KAAM,SACNC,UAAWC,gBAAK,kBAAM,iCAExB,CACEH,KAAM,WACNC,KAAM,YACNC,UAAWC,gBAAK,kBAAM,iCAExB,CACEH,KAAM,YACNC,KAAM,aACNC,UAAWC,gBAAK,kBAAM,kCCHXC,EAbyB,SAAAC,GAEtC,OACE,4BAEIC,EAAOC,KAAI,SAACC,EAAuBC,GACjC,OAAO,wBAAIC,IAAKF,EAAMP,MAAM,kBAAC,IAAD,CAASU,GAAIH,EAAMP,MAAOO,EAAMR,YCKvDY,EAZsC,SAACJ,EAAOK,GAC3D,OACE,kBAAC,IAAD,CACEH,IAAKG,EACLZ,KAAMO,EAAMP,KACZa,OAAQ,SAAAT,GAAK,OACX,kBAACG,EAAMN,UAAP,iBAAqBG,EAArB,CAA4BN,OAAQS,EAAMT,cCmDnCgB,EA/BO,WAKpB,OAJAC,qBAAU,WACRC,QAAQC,IAAI,qDACX,IAGD,kBAAC,IAAaC,EACZ,kBAAC,IAAD,KACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAIhB,kBAAC,EAAD,OAGF,kBAAC,WAAD,CAAUC,SAAU,MAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOpB,KAAK,IAAIqB,OAAK,EAACR,OAAQ,kBAAO,kBAAC,IAAD,CAAUH,GAAG,aACjDL,EAAOC,KAAI,SAACC,EAAuBC,GAClC,OAAOG,EAAmBJ,EAAOC,MAEnC,kBAAC,IAAD,CAAUc,KAAK,KAAKZ,GAAG,YC9CrCa,IAASV,OACP,kBAAC,IAAMW,WAAP,KACE,kBAAC,EAAD,OAEF7B,SAAS8B,eAAe,W","file":"static/js/main.915d999f.chunk.js","sourcesContent":["import { observable, action, autorun } from 'mobx'\n\nclass BaseStore {\n  @observable title = 'hooks-ts-demo'\n\n  @observable globalCount = 0\n\n  @action.bound setGlobalCount (v: number): void {\n    this.globalCount = v\n  }\n}\n\nconst baseStore = new BaseStore()\n\nautorun(() => {\n  document.title = baseStore.title\n})\n\nexport default baseStore\n","import baseStore from './store.base'\n\nexport const stores = {\n  baseStore\n}\n\nexport default stores\n","import { lazy } from 'react'\n\nconst routes = [\n  {\n    name: 'Home',\n    path: '/home',\n    component: lazy(() => import(/* webpackChunkName: \"home\" */ '@/views/Home'))\n  },\n  {\n    name: 'About',\n    path: '/about',\n    component: lazy(() => import(/* webpackChunkName: \"about\" */ '@/views/About'))\n  },\n  {\n    name: 'UseState',\n    path: '/useState',\n    component: lazy(() => import(/* webpackChunkName: \"useState\" */ '@/views/UseState'))\n  },\n  {\n    name: 'UseEffect',\n    path: '/useEffect',\n    component: lazy(() => import(/* webpackChunkName: \"useEffect\" */ '@/views/UseEffect'))\n  }\n]\n\nexport default routes\n","import React from 'react'\nimport { NavLink } from 'react-router-dom' // useLocation\nimport { RouteInterface, MenusInterface } from '@/assets/interface'\nimport Routes from './Routes'\n\nconst Menus: React.FC<MenusInterface> = props => {\n  // const location = useLocation()\n  return (\n    <ul>\n      {\n        Routes.map((route: RouteInterface, i: number) => {\n          return <li key={route.path}><NavLink to={route.path}>{route.name}</NavLink></li>\n        })\n      }\n    </ul>\n  )\n}\n\nexport default Menus\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { RouteInterface } from '@/assets/interface'\n\nconst RouteWithSubRoutes: React.FC<RouteInterface> = (route, index: number) => {\n  return (\n    <Route\n      key={index}\n      path={route.path}\n      render={props => (\n        <route.component {...props} routes={route.routes} />\n      )}\n    />\n  )\n}\n\nexport default RouteWithSubRoutes\n","import React, { Suspense, useEffect } from 'react'\nimport { Provider } from 'mobx-react'\n// import logo from './logo.svg'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport store from '@/store'\nimport { Routes, Menus } from './router'\nimport RouteWithSubRoutes from '@/components/RouteWithSubRoutes'\nimport { RouteInterface } from './assets/interface'\n\n// function App () {\n//   return (\n//     <div className='App'>\n//       <header className='App-header'>\n//         <img src={logo} className='App-logo' alt='logo' />\n//         <p>\n//           Edit <code>src/App.tsx</code> and save to reload.\n//         </p>\n//         <a\n//           className='App-link'\n//           href='https://reactjs.org'\n//           target='_blank'\n//           rel='noopener noreferrer'\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   )\n// }\n\nconst App: React.FC = () => {\n  useEffect(() => {\n    console.log('https://juejin.im/post/5e652741518825494822d569')\n  }, [])\n\n  return (\n    <Provider {...store}>\n      <Router>\n        <div className='App'>\n          <header className='App-header'>\n            {/* <ul>\n              <li><Link to='/home'>Home</Link></li>\n            </ul> */}\n            <Menus />\n          </header>\n\n          <Suspense fallback={null}>\n            <Switch>\n              <Route path='/' exact render={() => (<Redirect to='/home'/>)} />\n              {Routes.map((route: RouteInterface, i: number) => {\n                return RouteWithSubRoutes(route, i)\n              })}\n              <Redirect from='/*' to='/' />\n            </Switch>\n          </Suspense>\n        </div>\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.scss'\nimport App from './App'\n// import * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n"],"sourceRoot":""}